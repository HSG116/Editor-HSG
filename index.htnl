<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>محرر الصور الفخم</title>
    <script src="https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@3.18.0"></script>
    <script src="https://cdn.jsdelivr.net/npm/@tensorflow-models/body-pix@2.2.0"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background: linear-gradient(135deg, #0a0a2a, #000000);
            color: #fff;
            min-height: 100vh;
            overflow-x: hidden;
            position: relative;
        }

        /* خلفية النجوم */
        .stars {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
        }

        .star {
            position: absolute;
            background-color: #fff;
            border-radius: 50%;
            animation: twinkle 5s infinite;
        }

        @keyframes twinkle {
            0%, 100% { opacity: 0.2; }
            50% { opacity: 1; }
        }

        /* التصميم العام */
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 15px;
        }

        header {
            text-align: center;
            padding: 20px 0;
            margin-bottom: 20px;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        }

        h1 {
            font-size: 2rem;
            margin-bottom: 10px;
            background: linear-gradient(90deg, #4a90e2, #0077ff);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            text-shadow: 0 0 10px rgba(74, 144, 226, 0.5);
        }

        .subtitle {
            color: #a0a0a0;
            font-size: 1rem;
        }

        .editor-container {
            display: flex;
            flex-wrap: wrap;
            gap: 15px;
            background: rgba(10, 15, 35, 0.7);
            border-radius: 15px;
            padding: 15px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(74, 144, 226, 0.3);
        }

        .image-section {
            flex: 1;
            min-width: 280px;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .image-preview {
            width: 100%;
            height: 350px;
            background: rgba(20, 25, 45, 0.8);
            border-radius: 10px;
            display: flex;
            justify-content: center;
            align-items: center;
            overflow: hidden;
            margin-bottom: 15px;
            border: 2px dashed rgba(74, 144, 226, 0.5);
            position: relative;
        }

        .image-preview img, .image-preview canvas {
            max-width: 100%;
            max-height: 100%;
            display: none;
        }

        .placeholder-text {
            color: #4a90e2;
            font-size: 1.1rem;
            text-align: center;
            padding: 15px;
        }

        .controls-section {
            flex: 1;
            min-width: 280px;
            display: flex;
            flex-direction: column;
            gap: 15px;
        }

        .control-group {
            background: rgba(15, 20, 40, 0.8);
            border-radius: 10px;
            padding: 12px;
            border: 1px solid rgba(74, 144, 226, 0.2);
        }

        .control-title {
            font-size: 1.1rem;
            margin-bottom: 12px;
            color: #4a90e2;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .control-title i {
            font-size: 1.2rem;
        }

        .control-row {
            display: flex;
            align-items: center;
            margin-bottom: 12px;
            flex-wrap: wrap;
        }

        .control-label {
            width: 100px;
            font-size: 0.85rem;
            color: #ccc;
            margin-bottom: 5px;
        }

        .slider-container {
            flex: 1;
            display: flex;
            align-items: center;
            gap: 8px;
            min-width: 150px;
        }

        input[type="range"] {
            flex: 1;
            height: 5px;
            background: rgba(74, 144, 226, 0.3);
            border-radius: 5px;
            outline: none;
            -webkit-appearance: none;
        }

        input[type="range"]::-webkit-slider-thumb {
            -webkit-appearance: none;
            width: 16px;
            height: 16px;
            background: #4a90e2;
            border-radius: 50%;
            cursor: pointer;
            box-shadow: 0 0 5px rgba(74, 144, 226, 0.8);
        }

        .value-display {
            width: 45px;
            text-align: center;
            background: rgba(74, 144, 226, 0.2);
            padding: 4px;
            border-radius: 5px;
            font-size: 0.85rem;
        }

        .button-group {
            display: flex;
            gap: 8px;
            flex-wrap: wrap;
        }

        button {
            padding: 10px 15px;
            border: none;
            border-radius: 8px;
            background: linear-gradient(135deg, #4a90e2, #0077ff);
            color: white;
            font-weight: bold;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 6px;
            flex: 1;
            justify-content: center;
            min-width: 140px;
            font-size: 0.9rem;
        }

        button:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(74, 144, 226, 0.4);
        }

        button:active {
            transform: translateY(0);
        }

        .file-input {
            display: none;
        }

        .file-label {
            display: block;
            padding: 10px 15px;
            border-radius: 8px;
            background: linear-gradient(135deg, #4a90e2, #0077ff);
            color: white;
            text-align: center;
            cursor: pointer;
            transition: all 0.3s ease;
            font-weight: bold;
            width: 100%;
            margin-bottom: 10px;
        }

        .file-label:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(74, 144, 226, 0.4);
        }

        .reset-btn {
            background: linear-gradient(135deg, #e24a4a, #ff0000);
        }

        .reset-btn:hover {
            box-shadow: 0 5px 15px rgba(226, 74, 74, 0.4);
        }

        .download-btn {
            background: linear-gradient(135deg, #4ae27a, #00ff55);
        }

        .download-btn:hover {
            box-shadow: 0 5px 15px rgba(74, 226, 122, 0.4);
        }

        .processing-overlay {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.7);
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
            z-index: 10;
            border-radius: 10px;
            display: none;
        }

        .spinner {
            border: 5px solid rgba(255, 255, 255, 0.3);
            border-radius: 50%;
            border-top: 5px solid #4a90e2;
            width: 50px;
            height: 50px;
            animation: spin 1s linear infinite;
            margin-bottom: 15px;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        footer {
            text-align: center;
            margin-top: 30px;
            padding: 15px;
            color: #a0a0a0;
            font-size: 0.85rem;
            border-top: 1px solid rgba(255, 255, 255, 0.1);
        }

        .notification {
            position: fixed;
            bottom: 20px;
            left: 50%;
            transform: translateX(-50%);
            background: rgba(15, 20, 40, 0.9);
            color: white;
            padding: 12px 20px;
            border-radius: 8px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.5);
            z-index: 1000;
            display: none;
            border-left: 4px solid #4a90e2;
        }

        @media (max-width: 768px) {
            .container {
                padding: 10px;
            }
            
            .editor-container {
                flex-direction: column;
                padding: 10px;
                gap: 10px;
            }
            
            .image-preview {
                height: 300px;
            }
            
            .button-group {
                flex-direction: column;
            }
            
            button {
                width: 100%;
            }
            
            .control-row {
                flex-direction: column;
                align-items: flex-start;
            }
            
            .slider-container {
                width: 100%;
                margin-top: 5px;
            }
        }

        @media (max-width: 480px) {
            h1 {
                font-size: 1.7rem;
            }
            
            .image-preview {
                height: 250px;
            }
            
            .control-group {
                padding: 10px;
            }
            
            button {
                padding: 8px 12px;
                font-size: 0.85rem;
            }
        }
    </style>
</head>
<body>
    <!-- خلفية النجوم -->
    <div class="stars" id="stars"></div>

    <div class="container">
        <header>
            <h1>محرر الصور الفخم</h1>
            <p class="subtitle">قم بتحرير صورك بسهولة مع أدوات متقدمة وتصميم أنيق</p>
        </header>

        <div class="editor-container">
            <div class="image-section">
                <div class="image-preview">
                    <p class="placeholder-text">قم بتحميل صورة لبدء التحرير</p>
                    <img id="preview" src="" alt="معاينة الصورة">
                    <canvas id="canvas"></canvas>
                    
                    <div class="processing-overlay" id="processing-overlay">
                        <div class="spinner"></div>
                        <p>جاري معالجة الصورة...</p>
                    </div>
                </div>
                
                <label for="image-upload" class="file-label">
                    <i>📁</i> تحميل صورة
                </label>
                <input type="file" id="image-upload" class="file-input" accept="image/*">
            </div>

            <div class="controls-section">
                <div class="control-group">
                    <h3 class="control-title"><i>🔄</i> التحكم الأساسي</h3>
                    
                    <div class="control-row">
                        <span class="control-label">الحجم</span>
                        <div class="slider-container">
                            <input type="range" id="size-slider" min="10" max="200" value="100">
                            <span class="value-display" id="size-value">100%</span>
                        </div>
                    </div>
                    
                    <div class="control-row">
                        <span class="control-label">السطوع</span>
                        <div class="slider-container">
                            <input type="range" id="brightness-slider" min="0" max="200" value="100">
                            <span class="value-display" id="brightness-value">100%</span>
                        </div>
                    </div>
                    
                    <div class="control-row">
                        <span class="control-label">التناقض</span>
                        <div class="slider-container">
                            <input type="range" id="contrast-slider" min="0" max="200" value="100">
                            <span class="value-display" id="contrast-value">100%</span>
                        </div>
                    </div>
                    
                    <div class="control-row">
                        <span class="control-label">التشبع</span>
                        <div class="slider-container">
                            <input type="range" id="saturation-slider" min="0" max="200" value="100">
                            <span class="value-display" id="saturation-value">100%</span>
                        </div>
                    </div>
                </div>
                
                <div class="control-group">
                    <h3 class="control-title"><i>🎨</i> تأثيرات متقدمة</h3>
                    
                    <div class="control-row">
                        <span class="control-label">الضبابية</span>
                        <div class="slider-container">
                            <input type="range" id="blur-slider" min="0" max="10" value="0">
                            <span class="value-display" id="blur-value">0px</span>
                        </div>
                    </div>
                    
                    <div class="control-row">
                        <span class="control-label">الدوران</span>
                        <div class="slider-container">
                            <input type="range" id="rotate-slider" min="0" max="360" value="0">
                            <span class="value-display" id="rotate-value">0°</span>
                        </div>
                    </div>
                    
                    <div class="control-row">
                        <span class="control-label">الشفافية</span>
                        <div class="slider-container">
                            <input type="range" id="opacity-slider" min="0" max="100" value="100">
                            <span class="value-display" id="opacity-value">100%</span>
                        </div>
                    </div>
                </div>
                
                <div class="control-group">
                    <h3 class="control-title"><i>⚡</i> أدوات سريعة</h3>
                    
                    <div class="button-group">
                        <button id="remove-bg-btn">
                            <i>🧹</i> إزالة الخلفية
                        </button>
                        <button id="grayscale-btn">
                            <i>⚫</i> تدرج الرمادي
                        </button>
                        <button id="sepia-btn">
                            <i>🟫</i> تأثير سيبيا
                        </button>
                        <button id="invert-btn">
                            <i>🔄</i> عكس الألوان
                        </button>
                    </div>
                </div>
                
                <div class="control-group">
                    <h3 class="control-title"><i>💾</i> حفظ الصورة</h3>
                    
                    <div class="button-group">
                        <button id="reset-btn" class="reset-btn">
                            <i>🔄</i> إعادة تعيين
                        </button>
                        <button id="download-btn" class="download-btn">
                            <i>💾</i> حفظ الصورة
                        </button>
                    </div>
                </div>
            </div>
        </div>
        
        <footer>
            <p>محرر الصور الفخم &copy; 2023 - جميع الحقوق محفوظة</p>
        </footer>
    </div>

    <div class="notification" id="notification"></div>

    <script>
        // إنشاء النجوم في الخلفية
        function createStars() {
            const starsContainer = document.getElementById('stars');
            const starsCount = 150;
            
            for (let i = 0; i < starsCount; i++) {
                const star = document.createElement('div');
                star.classList.add('star');
                
                // مواقع عشوائية للنجوم
                const x = Math.random() * 100;
                const y = Math.random() * 100;
                const size = Math.random() * 2 + 1;
                const duration = 2 + Math.random() * 8;
                
                star.style.left = `${x}%`;
                star.style.top = `${y}%`;
                star.style.width = `${size}px`;
                star.style.height = `${size}px`;
                star.style.animationDuration = `${duration}s`;
                star.style.animationDelay = `${Math.random() * 5}s`;
                
                starsContainer.appendChild(star);
            }
        }

        // إظهار الإشعارات
        function showNotification(message, duration = 3000) {
            const notification = document.getElementById('notification');
            notification.textContent = message;
            notification.style.display = 'block';
            
            setTimeout(() => {
                notification.style.display = 'none';
            }, duration);
        }

        // تهيئة محرر الصور
        document.addEventListener('DOMContentLoaded', async function() {
            createStars();
            
            const imageUpload = document.getElementById('image-upload');
            const preview = document.getElementById('preview');
            const canvas = document.getElementById('canvas');
            const ctx = canvas.getContext('2d');
            const placeholderText = document.querySelector('.placeholder-text');
            const processingOverlay = document.getElementById('processing-overlay');
            
            // عناصر التحكم
            const sizeSlider = document.getElementById('size-slider');
            const brightnessSlider = document.getElementById('brightness-slider');
            const contrastSlider = document.getElementById('contrast-slider');
            const saturationSlider = document.getElementById('saturation-slider');
            const blurSlider = document.getElementById('blur-slider');
            const rotateSlider = document.getElementById('rotate-slider');
            const opacitySlider = document.getElementById('opacity-slider');
            
            // قيم التحكم
            const sizeValue = document.getElementById('size-value');
            const brightnessValue = document.getElementById('brightness-value');
            const contrastValue = document.getElementById('contrast-value');
            const saturationValue = document.getElementById('saturation-value');
            const blurValue = document.getElementById('blur-value');
            const rotateValue = document.getElementById('rotate-value');
            const opacityValue = document.getElementById('opacity-value');
            
            // الأزرار
            const removeBgBtn = document.getElementById('remove-bg-btn');
            const grayscaleBtn = document.getElementById('grayscale-btn');
            const sepiaBtn = document.getElementById('sepia-btn');
            const invertBtn = document.getElementById('invert-btn');
            const resetBtn = document.getElementById('reset-btn');
            const downloadBtn = document.getElementById('download-btn');
            
            let originalImage = null;
            let currentImage = null;
            let net = null;
            
            // تحميل نموذج BodyPix لإزالة الخلفية
            async function loadBodyPixModel() {
                try {
                    showNotification('جاري تحميل نموذج إزالة الخلفية...', 2000);
                    net = await bodyPix.load({
                        architecture: 'MobileNetV1',
                        outputStride: 16,
                        multiplier: 0.75,
                        quantBytes: 2
                    });
                    showNotification('تم تحميل النموذج بنجاح', 2000);
                } catch (error) {
                    console.error('خطأ في تحميل النموذج:', error);
                    showNotification('حدث خطأ في تحميل نموذج إزالة الخلفية', 3000);
                }
            }
            
            // تحميل الصورة
            imageUpload.addEventListener('change', function(e) {
                const file = e.target.files[0];
                if (file) {
                    const reader = new FileReader();
                    
                    reader.onload = function(event) {
                        preview.src = event.target.result;
                        preview.style.display = 'block';
                        canvas.style.display = 'none';
                        placeholderText.style.display = 'none';
                        originalImage = preview.src;
                        currentImage = preview;
                        
                        // إعادة تعيين جميع عناصر التحكم
                        resetControls();
                        applyFilters();
                    };
                    
                    reader.readAsDataURL(file);
                }
            });
            
            // تحديث القيم المعروضة
            function updateValueDisplay() {
                sizeValue.textContent = `${sizeSlider.value}%`;
                brightnessValue.textContent = `${brightnessSlider.value}%`;
                contrastValue.textContent = `${contrastSlider.value}%`;
                saturationValue.textContent = `${saturationSlider.value}%`;
                blurValue.textContent = `${blurSlider.value}px`;
                rotateValue.textContent = `${rotateSlider.value}°`;
                opacityValue.textContent = `${opacitySlider.value}%`;
            }
            
            // تطبيق الفلاتر على الصورة
            function applyFilters() {
                if (currentImage && currentImage.style.display !== 'none') {
                    const filters = `
                        brightness(${brightnessSlider.value}%) 
                        contrast(${contrastSlider.value}%) 
                        saturate(${saturationSlider.value}%) 
                        blur(${blurSlider.value}px)
                    `;
                    
                    currentImage.style.filter = filters;
                    currentImage.style.opacity = `${opacitySlider.value / 100}`;
                    currentImage.style.transform = `scale(${sizeSlider.value / 100}) rotate(${rotateSlider.value}deg)`;
                }
            }
            
            // إعادة تعيين عناصر التحكم
            function resetControls() {
                sizeSlider.value = 100;
                brightnessSlider.value = 100;
                contrastSlider.value = 100;
                saturationSlider.value = 100;
                blurSlider.value = 0;
                rotateSlider.value = 0;
                opacitySlider.value = 100;
                
                updateValueDisplay();
                applyFilters();
            }
            
            // إزالة الخلفية باستخدام BodyPix
            async function removeBackground() {
                if (!currentImage || currentImage.style.display === 'none') {
                    showNotification('يرجى تحميل صورة أولاً', 3000);
                    return;
                }
                
                if (!net) {
                    showNotification('جاري تحميل النموذج، حاول مرة أخرى بعد قليل', 3000);
                    return;
                }
                
                processingOverlay.style.display = 'flex';
                
                try {
                    // إنشاء صورة للعمل عليها
                    const img = new Image();
                    img.crossOrigin = "anonymous";
                    img.src = currentImage.src;
                    
                    img.onload = async function() {
                        // تعيين أبعاد Canvas
                        canvas.width = img.width;
                        canvas.height = img.height;
                        
                        // تقدير segmentation للصورة
                        const segmentation = await net.segmentPerson(img, {
                            flipHorizontal: false,
                            internalResolution: 'medium',
                            segmentationThreshold: 0.7
                        });
                        
                        // رسم الصورة على Canvas
                        ctx.clearRect(0, 0, canvas.width, canvas.height);
                        ctx.drawImage(img, 0, 0);
                        
                        // استخراج بيانات البكسل
                        const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);
                        const data = imageData.data;
                        
                        // إزالة الخلفية عن طريق جعل البكسلات غير المرغوب فيها شفافة
                        for (let i = 0; i < data.length; i += 4) {
                            // إذا كان البكسل ليس جزءًا من الشخص، اجعله شفافًا
                            const pixelIndex = i / 4;
                            if (!segmentation.data[pixelIndex]) {
                                data[i + 3] = 0; // جعل قناة alpha 0 (شفاف)
                            }
                        }
                        
                        // وضع البيانات المعدلة على Canvas
                        ctx.putImageData(imageData, 0, 0);
                        
                        // إظهار Canvas وإخفاء الصورة الأصلية
                        canvas.style.display = 'block';
                        preview.style.display = 'none';
                        currentImage = canvas;
                        
                        // تطبيق الفلاتر الحالية على Canvas
                        applyFilters();
                        
                        processingOverlay.style.display = 'none';
                        showNotification('تم إزالة الخلفية بنجاح', 3000);
                    };
                } catch (error) {
                    console.error('خطأ في إزالة الخلفية:', error);
                    processingOverlay.style.display = 'none';
                    showNotification('حدث خطأ أثناء إزالة الخلفية', 3000);
                }
            }
            
            // إضافة مستمعي الأحداث لعناصر التحكم
            const sliders = [
                sizeSlider, brightnessSlider, contrastSlider, 
                saturationSlider, blurSlider, rotateSlider, opacitySlider
            ];
            
            sliders.forEach(slider => {
                slider.addEventListener('input', function() {
                    updateValueDisplay();
                    applyFilters();
                });
            });
            
            // تطبيق تأثير إزالة الخلفية
            removeBgBtn.addEventListener('click', removeBackground);
            
            // تطبيق تأثير التدرج الرمادي
            grayscaleBtn.addEventListener('click', function() {
                if (currentImage && currentImage.style.display !== 'none') {
                    currentImage.style.filter += ' grayscale(100%)';
                    showNotification('تم تطبيق تأثير التدرج الرمادي', 2000);
                } else {
                    showNotification('يرجى تحميل صورة أولاً', 3000);
                }
            });
            
            // تطبيق تأثير السيبيا
            sepiaBtn.addEventListener('click', function() {
                if (currentImage && currentImage.style.display !== 'none') {
                    currentImage.style.filter += ' sepia(100%)';
                    showNotification('تم تطبيق تأثير السيبيا', 2000);
                } else {
                    showNotification('يرجى تحميل صورة أولاً', 3000);
                }
            });
            
            // تطبيق تأثير عكس الألوان
            invertBtn.addEventListener('click', function() {
                if (currentImage && currentImage.style.display !== 'none') {
                    currentImage.style.filter += ' invert(100%)';
                    showNotification('تم تطبيق تأثير عكس الألوان', 2000);
                } else {
                    showNotification('يرجى تحميل صورة أولاً', 3000);
                }
            });
            
            // إعادة تعيين الصورة
            resetBtn.addEventListener('click', function() {
                if (preview.style.display === 'block' || canvas.style.display === 'block') {
                    preview.src = originalImage;
                    preview.style.display = 'block';
                    canvas.style.display = 'none';
                    currentImage = preview;
                    resetControls();
                    showNotification('تم إعادة تعيين الصورة', 2000);
                } else {
                    showNotification('يرجى تحميل صورة أولاً', 3000);
                }
            });
            
            // تحميل الصورة
            downloadBtn.addEventListener('click', function() {
                if (currentImage && currentImage.style.display !== 'none') {
                    const downloadCanvas = document.createElement('canvas');
                    const downloadCtx = downloadCanvas.getContext('2d');
                    
                    // تعيين أبعاد Canvas للتحميل
                    if (currentImage === preview) {
                        downloadCanvas.width = preview.naturalWidth;
                        downloadCanvas.height = preview.naturalHeight;
                    } else {
                        downloadCanvas.width = canvas.width;
                        downloadCanvas.height = canvas.height;
                    }
                    
                    // تطبيق الفلاتر على Canvas
                    downloadCtx.filter = currentImage.style.filter;
                    
                    // رسم الصورة على Canvas مع التحولات
                    downloadCtx.save();
                    downloadCtx.translate(downloadCanvas.width / 2, downloadCanvas.height / 2);
                    downloadCtx.scale(sizeSlider.value / 100, sizeSlider.value / 100);
                    downloadCtx.rotate(rotateSlider.value * Math.PI / 180);
                    
                    if (currentImage === preview) {
                        downloadCtx.drawImage(preview, -preview.naturalWidth / 2, -preview.naturalHeight / 2, 
                                            preview.naturalWidth, preview.naturalHeight);
                    } else {
                        downloadCtx.drawImage(canvas, -canvas.width / 2, -canvas.height / 2, 
                                            canvas.width, canvas.height);
                    }
                    
                    downloadCtx.restore();
                    
                    // تطبيق الشفافية
                    downloadCtx.globalAlpha = opacitySlider.value / 100;
                    
                    // إنشاء رابط للتحميل
                    const link = document.createElement('a');
                    link.download = 'edited-image.png';
                    link.href = downloadCanvas.toDataURL('image/png');
                    link.click();
                    
                    showNotification('تم تحميل الصورة بنجاح', 2000);
                } else {
                    showNotification('يرجى تحميل صورة أولاً', 3000);
                }
            });
            
            // تهيئة القيم المعروضة
            updateValueDisplay();
            
            // تحميل نموذج BodyPix
            loadBodyPixModel();
        });
    </script>
</body>
</html>
